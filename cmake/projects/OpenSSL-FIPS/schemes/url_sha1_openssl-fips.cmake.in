cmake_minimum_required(VERSION 3.0)
project(Hunter)

include(ExternalProject)

list(APPEND CMAKE_MODULE_PATH "@HUNTER_SELF@/cmake/modules")

# include(hunter_dump_cmake_flags)
# include(hunter_pick_archiver)
include(hunter_status_debug)
include(hunter_assert_not_empty_string)
include(hunter_user_error)

hunter_status_debug("Scheme: url_sha1_openssl-fips")

hunter_assert_not_empty_string("@HUNTER_SELF@")
hunter_assert_not_empty_string("@HUNTER_EP_NAME@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_URL@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SHA1@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_SOURCE_DIR@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_INSTALL_PREFIX@")
hunter_assert_not_empty_string("@HUNTER_PACKAGE_LICENSE_DIR@")
hunter_assert_not_empty_string("@HUNTER_GLOBAL_SCRIPT_DIR@")
hunter_assert_not_empty_string("@HUNTER_TLS_VERIFY@")

file(WRITE "/tmp/fipsenv" "export FIPSDIR=@HUNTER_PACKAGE_INSTALL_PREFIX@")

ExternalProject_Add(
    "@HUNTER_EP_NAME@"
    URL
    @HUNTER_PACKAGE_URL@
    URL_HASH
    SHA1=@HUNTER_PACKAGE_SHA1@
    DOWNLOAD_DIR
    "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
    TLS_VERIFY
    "@HUNTER_TLS_VERIFY@"
    SOURCE_DIR
    "@HUNTER_PACKAGE_SOURCE_DIR@"
    INSTALL_DIR
    "@HUNTER_PACKAGE_INSTALL_PREFIX@"
    CONFIGURE_COMMAND
    . /tmp/fipsenv && ./config
    BUILD_COMMAND
    make
    BUILD_IN_SOURCE
    1
    INSTALL_COMMAND
    make install
)

